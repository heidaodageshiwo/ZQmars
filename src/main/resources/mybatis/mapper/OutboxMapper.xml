<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iekun.ef.dao.OutboxMapper">
  <resultMap type="com.iekun.ef.model.Outbox" id="BaseResultMap" >
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="NOTIFY_NAME" jdbcType="VARCHAR" property="notifyName" />
    <result column="NOTIFY_PHONE" jdbcType="VARCHAR" property="notifyPhone" />
    <result column="NOTIFY_EMAIL" jdbcType="VARCHAR" property="notifyEmail" />
    <result column="EMAIL_SUBJECT" jdbcType="VARCHAR" property="emailSubject" />
    <result column="NOTIFY_TYPE" jdbcType="TINYINT" property="notifyType" />
    <result column="EVENT_TYPE" jdbcType="TINYINT" property="eventType" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="LAST_SEND_TIME" jdbcType="VARCHAR" property="lastSendTime" />
    <result column="DELETE_FLAG" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iekun.ef.model.Outbox">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NOTIFY_NAME, NOTIFY_PHONE, NOTIFY_EMAIL, EMAIL_SUBJECT, NOTIFY_TYPE, EVENT_TYPE, STATUS, CREATE_TIME,
    LAST_SEND_TIME, DELETE_FLAG
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.iekun.ef.model.OutboxExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.iekun.ef.model.OutboxExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectOutboxList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0 AND
        STATUS = #{status,jdbcType=TINYINT}
        AND
        NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT}
        LIMIT 1
  </select>
  
  <select id="querySmsOutboxList" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
    AND NOTIFY_TYPE = 0 
    <if test="notifyName != null">  
     AND NOTIFY_NAME = #{notifyName}  
    </if> 
     <if test="notifyPhone != null">  
     AND NOTIFY_PHONE = #{notifyPhone}  
    </if>
    <if test="startDate != null">  
      AND CREATE_TIME > #{startDate} AND  #{endDate} > CREATE_TIME
    </if>  
    <if test="startDate == null">  
      AND CREATE_TIME between "21161212232323" and "21161212232323"  
    </if>  
    <if test="start != null and length != null"> 
      order by CREATE_TIME ASC
      limit #{start}, #{length}
    </if> 
   </select>
   
   <select id="getSmsOutboxCnt" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(1) from (select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
    AND NOTIFY_TYPE = 0 
    <if test="notifyName != null">  
     AND NOTIFY_NAME = #{notifyName}  
    </if> 
     <if test="notifyPhone != null">  
     AND NOTIFY_PHONE = #{notifyPhone}  
    </if>
    <if test="startDate != null">  
      AND CREATE_TIME > #{startDate} AND  #{endDate} > CREATE_TIME
    </if>  
    <if test="startDate == null">  
      AND CREATE_TIME between "21161212232323" and "21161212232323"  
    </if>) as outbox_temp  
    
   </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iekun.ef.model.OutboxExample">
    delete from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox (NOTIFY_NAME, NOTIFY_PHONE, 
      NOTIFY_EMAIL, NOTIFY_TYPE, EVENT_TYPE, 
      STATUS, CREATE_TIME, LAST_SEND_TIME,
      DELETE_FLAG, CONTENT, EMAIL_SUBJECT)
    values (#{notifyName,jdbcType=VARCHAR}, #{notifyPhone,jdbcType=VARCHAR}, 
      #{notifyEmail,jdbcType=VARCHAR}, #{notifyType,jdbcType=TINYINT}, #{eventType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=VARCHAR}, #{lastSendTime,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR},  #{emailSubject,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="notifyName != null">
        NOTIFY_NAME,
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE,
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL,
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE,
      </if>
      <if test="eventType != null">
        EVENT_TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="notifyName != null">
        #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iekun.ef.model.OutboxExample" resultType="java.lang.Integer">
    select count(*) from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_outbox
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.notifyName != null">
        NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyPhone != null">
        NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyEmail != null">
        NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyType != null">
        NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      </if>
      <if test="record.eventType != null">
        EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSendTime != null">
        LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateById" parameterType="java.util.Map">
    update t_outbox
    set 
      STATUS = #{status,jdbcType=TINYINT},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR}
     where ID = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByExample" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    <set>
      <if test="notifyName != null">
        NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="eventType != null">
        EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="getEmails" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
       AND NOTIFY_TYPE = 1
    <if test="notifyEmail != null">
      AND NOTIFY_EMAIL = #{notifyEmail}
    </if>
    <if test="emailSubject != null">
      AND EMAIL_SUBJECT = #{emailSubject}
    </if>
    <if test="eventType != null">
      AND EVENT_TYPE = #{eventType}
    </if>
    <if test="status != null">
      AND STATUS = #{status}
    </if>
    <if test="startTime != null">
      AND CREATE_TIME > #{startTime}
    </if>
    <if test="endTime != null">
      AND #{endTime} > CREATE_TIME
    </if>
    <if test="start != null and length != null">
      order by CREATE_TIME ASC
      limit #{start}, #{length}
    </if>
  </select>
  <select id="getEmailCount" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*)
    from t_outbox
    where DELETE_FLAG = 0
    AND NOTIFY_TYPE = 1
    <if test="notifyEmail != null">
      AND NOTIFY_EMAIL = #{notifyEmail}
    </if>
    <if test="emailSubject != null">
      AND EMAIL_SUBJECT = #{emailSubject}
    </if>
    <if test="eventType != null">
      AND EVENT_TYPE = #{eventType}
    </if>
    <if test="status != null">
      AND STATUS = #{status}
    </if>
    <if test="startTime != null">
      AND CREATE_TIME > #{startTime}
    </if>
    <if test="endTime != null">
      AND #{endTime} > CREATE_TIME
    </if>
  </select>

  <select id="queryEmailHistory" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
    AND NOTIFY_TYPE = 1
    AND  STATUS != 0
    <if test="notifyEmail != null">
      AND NOTIFY_EMAIL = #{notifyEmail}
    </if>
    <if test="startTime != null">
      AND LAST_SEND_TIME >= #{startTime}
    </if>
    <if test="endTime != null">
      AND #{endTime} >= LAST_SEND_TIME
    </if>
      order by LAST_SEND_TIME ASC
  </select>

  <select id="queryHistory" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
   /* AND NOTIFY_TYPE = 1*/
    AND  STATUS != 0
    <if test="notifyEmail != null">
      AND NOTIFY_EMAIL = #{notifyEmail}
    </if>
    <if test="emailSubject != null">
      AND EMAIL_SUBJECT = #{emailSubject}
    </if>
    <if test="eventType != null">
      AND EVENT_TYPE = #{eventType}
    </if>
    <if test="startTime != null">
      AND CREATE_TIME > #{startTime}
    </if>
    <if test="endTime != null">
      AND #{endTime} > CREATE_TIME
    </if>
    <if test="start != null and length != null">
      order by CREATE_TIME ASC
    </if>
  </select>
  <update id="updateEmail" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set
      STATUS = #{status,jdbcType=TINYINT},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="getEmail" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where DELETE_FLAG = 0
    AND NOTIFY_TYPE = 1
    AND ID = #{id,jdbcType=BIGINT}
  </select>
  <!-- <resultMap id="BaseResultMap" type="com.iekun.ef.model.Outbox">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="NOTIFY_NAME" jdbcType="VARCHAR" property="notifyName" />
    <result column="NOTIFY_PHONE" jdbcType="VARCHAR" property="notifyPhone" />
    <result column="NOTIFY_EMAIL" jdbcType="VARCHAR" property="notifyEmail" />
    <result column="NOTIFY_TYPE" jdbcType="TINYINT" property="notifyType" />
    <result column="EVENT_TYPE" jdbcType="TINYINT" property="eventType" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="LAST_SEND_TIME" jdbcType="VARCHAR" property="lastSendTime" />
    <result column="DELETE_FLAG" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iekun.ef.model.Outbox">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NOTIFY_NAME, NOTIFY_PHONE, NOTIFY_EMAIL, NOTIFY_TYPE, EVENT_TYPE, STATUS, CREATE_TIME, 
    LAST_SEND_TIME, DELETE_FLAG
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.iekun.ef.model.OutboxExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.iekun.ef.model.OutboxExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iekun.ef.model.OutboxExample">
    delete from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox (ID, NOTIFY_NAME, NOTIFY_PHONE, 
      NOTIFY_EMAIL, NOTIFY_TYPE, EVENT_TYPE, 
      STATUS, CREATE_TIME, LAST_SEND_TIME, 
      DELETE_FLAG, CONTENT)
    values (#{id,jdbcType=BIGINT}, #{notifyName,jdbcType=VARCHAR}, #{notifyPhone,jdbcType=VARCHAR}, 
      #{notifyEmail,jdbcType=VARCHAR}, #{notifyType,jdbcType=TINYINT}, #{eventType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=VARCHAR}, #{lastSendTime,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="notifyName != null">
        NOTIFY_NAME,
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE,
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL,
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE,
      </if>
      <if test="eventType != null">
        EVENT_TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="notifyName != null">
        #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iekun.ef.model.OutboxExample" resultType="java.lang.Integer">
    select count(*) from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_outbox
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.notifyName != null">
        NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyPhone != null">
        NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyEmail != null">
        NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyType != null">
        NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      </if>
      <if test="record.eventType != null">
        EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSendTime != null">
        LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{record.eventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    <set>
      <if test="notifyName != null">
        NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="eventType != null">
        EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      EVENT_TYPE = #{eventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.iekun.ef.model.Outbox">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="NOTIFY_NAME" jdbcType="VARCHAR" property="notifyName" />
    <result column="NOTIFY_PHONE" jdbcType="VARCHAR" property="notifyPhone" />
    <result column="NOTIFY_EMAIL" jdbcType="VARCHAR" property="notifyEmail" />
    <result column="NOTIFY_TYPE" jdbcType="TINYINT" property="notifyType" />
    <result column="TRIGGER_EVENT_TYPE" jdbcType="TINYINT" property="triggerEventType" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="LAST_SEND_TIME" jdbcType="VARCHAR" property="lastSendTime" />
    <result column="DELETE_FLAG" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.iekun.ef.model.Outbox">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NOTIFY_NAME, NOTIFY_PHONE, NOTIFY_EMAIL, NOTIFY_TYPE, TRIGGER_EVENT_TYPE, STATUS, 
    CREATE_TIME, LAST_SEND_TIME, DELETE_FLAG
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.iekun.ef.model.OutboxExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.iekun.ef.model.OutboxExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_outbox
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iekun.ef.model.OutboxExample">
    delete from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox (ID, NOTIFY_NAME, NOTIFY_PHONE, 
      NOTIFY_EMAIL, NOTIFY_TYPE, TRIGGER_EVENT_TYPE, 
      STATUS, CREATE_TIME, LAST_SEND_TIME, 
      DELETE_FLAG, CONTENT)
    values (#{id,jdbcType=BIGINT}, #{notifyName,jdbcType=VARCHAR}, #{notifyPhone,jdbcType=VARCHAR}, 
      #{notifyEmail,jdbcType=VARCHAR}, #{notifyType,jdbcType=TINYINT}, #{triggerEventType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=VARCHAR}, #{lastSendTime,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iekun.ef.model.Outbox">
    insert into t_outbox
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="notifyName != null">
        NOTIFY_NAME,
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE,
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL,
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE,
      </if>
      <if test="triggerEventType != null">
        TRIGGER_EVENT_TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="notifyName != null">
        #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="triggerEventType != null">
        #{triggerEventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iekun.ef.model.OutboxExample" resultType="java.lang.Integer">
    select count(*) from t_outbox
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_outbox
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.notifyName != null">
        NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyPhone != null">
        NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyEmail != null">
        NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyType != null">
        NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      </if>
      <if test="record.triggerEventType != null">
        TRIGGER_EVENT_TYPE = #{record.triggerEventType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSendTime != null">
        LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      TRIGGER_EVENT_TYPE = #{record.triggerEventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_outbox
    set ID = #{record.id,jdbcType=BIGINT},
      NOTIFY_NAME = #{record.notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{record.notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{record.notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{record.notifyType,jdbcType=TINYINT},
      TRIGGER_EVENT_TYPE = #{record.triggerEventType,jdbcType=TINYINT},
      STATUS = #{record.status,jdbcType=TINYINT},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{record.lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    <set>
      <if test="notifyName != null">
        NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      </if>
      <if test="notifyPhone != null">
        NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      </if>
      <if test="notifyEmail != null">
        NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      </if>
      <if test="notifyType != null">
        NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      </if>
      <if test="triggerEventType != null">
        TRIGGER_EVENT_TYPE = #{triggerEventType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastSendTime != null">
        LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      TRIGGER_EVENT_TYPE = #{triggerEventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iekun.ef.model.Outbox">
    update t_outbox
    set NOTIFY_NAME = #{notifyName,jdbcType=VARCHAR},
      NOTIFY_PHONE = #{notifyPhone,jdbcType=VARCHAR},
      NOTIFY_EMAIL = #{notifyEmail,jdbcType=VARCHAR},
      NOTIFY_TYPE = #{notifyType,jdbcType=TINYINT},
      TRIGGER_EVENT_TYPE = #{triggerEventType,jdbcType=TINYINT},
      STATUS = #{status,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      LAST_SEND_TIME = #{lastSendTime,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>